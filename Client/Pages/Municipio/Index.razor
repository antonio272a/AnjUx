@attribute [HubIcon(Icon.City, "Municípios")]
@inject MunicipioService municipioService
@inject CoreNavBarStore navBarStore

<CoreCard>
    <CoreDataGrid Data="@Municipios">
        <HeaderTemplate>
            <CoreForm Model="@Model">
                <CoreRow>
                    <EditorFor Property="(model) => model.Nome" />
                </CoreRow>
                <CoreRow Actions>
                    <CoreButton Icon="Icon.Search" ToolTip="Buscar" Click="async () => await BuscarMunicipios()" />
                </CoreRow>
            </CoreForm>
        </HeaderTemplate>
        <Columns>
            <CoreDataGridColumn Property="(model) => model.CodigoIBGE" />
            <CoreDataGridColumn Property="(model) => model.Nome" />
            <CoreDataGridColumn Property="(model) => model.UF" />
        </Columns>
    </CoreDataGrid>
</CoreCard>

@code {
    private SearchModel Model = new();

    private List<Municipio> Municipios { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await GetMunicipios();

        navBarStore.Titulo = "Municípios";

        navBarStore.SetItens(new CoreNavBarItem(Icon.Sync, async () => await municipioService.AtualizarMunicipios(), "Atualizar Municípios"));

        await base.OnInitializedAsync();
    }

    private async Task GetMunicipios()
    {
        Municipios = await municipioService.Listar() ?? [];
    }

    private async Task BuscarMunicipios()
    {
        Municipios = await municipioService.Buscar(Model.Nome) ?? [];
    }

    private class SearchModel
    {
        public string? Nome { get; set; }
    }
}
